tosca_definitions_version: tosca_simple_profile_for_nfv_1_0_0
description: description
node_types:
  tosca.nodes.nfv.VNF6:
    requirements:
    - virtualLink1:
        type: tosca.nodes.nfv.VL
        required: true
metadata:
  template_name: free5GCSetup
topology_template:
  substitution_mappings:
    node_type: tosca.nodes.nfv.VNF6
  node_templates:
    VDU1:
      type: tosca.nodes.nfv.VDU.Tacker
      properties:
        name: free5gc-udm-VNF
        image: new-control
        flavor: free5gc
        availability_zone: nova
        mgmt_driver: noop
        key_name: free5gc
        user_data_format: RAW
        user_data: |
          #!/bin/sh
          cd /home/ubuntu/
          echo "export GOPATH for bash shell"
          export HOME=/home/ubuntu
          export GOPATH=$HOME/go
          export GOROOT=/usr/local/go
          export PATH=$PATH:$GOPATH/bin:$GOROOT/bin
          export GO111MODULE=off

          cd free5gc
          echo "configure UDM"
          cat > /home/ubuntu/free5gc/config/udmcfg.yaml <<- EOM
          info:
            version: 1.0.1
            description: UDM initial local configuration

          configuration:
            serviceNameList: # the SBI services provided by this UDM, refer to TS 29.503
              - nudm-sdm # Nudm_SubscriberDataManagement service
              - nudm-uecm # Nudm_UEContextManagement service
              - nudm-ueau # Nudm_UEAuthenticationManagement service
              - nudm-ee # Nudm_EventExposureManagement service
              - nudm-pp # Nudm_ParameterProvisionDataManagement service
            sbi: # Service-based interface information
              scheme: http # the protocol for sbi (http or https)
              registerIPv4: 127.0.0.3 # IP used to register to NRF
              bindingIPv4: 127.0.0.3  # IP used to bind the service
              port: 8000 # Port used to bind the service
              tls: # the local path of TLS key
                log: free5gc/udmsslkey.log # UDM keylog
                pem: free5gc/support/TLS/udm.pem # UDM TLS Certificate
                key: free5gc/support/TLS/udm.key # UDM TLS Private key
            nrfUri: http://127.0.0.10:8000 # a valid URI of NRF

            # test data set from TS33501-f60 Annex C.4
            SuciProfile:
              - ProtectionScheme: 1 # Protect Scheme: Profile A
                PrivateKey: c53c22208b61860b06c62e5406a7b330c2b577aa5558981510d128247d38bd1d
                PublicKey: 5a8d38864820197c3394b92613b20b91633cbd897119273bf8e4a6f4eec0a650
              - ProtectionScheme: 2 # Protect Scheme: Profile B
                PrivateKey: F1AB1074477EBCC7F554EA1C5FC368B1616730155E0041AC447D6301975FECDA
                PublicKey: 0472DA71976234CE833A6907425867B82E074D44EF907DFB4B3E21C1C2256EBCD15A7DED52FCBB097A4ED250E036C7B9C8C7004C4EEDC4F068CD7BF8D3F900E3B4

          # the kind of log output
            # debugLevel: how detailed to output, value: trace, debug, info, warn, error, fatal, panic
            # ReportCaller: enable the caller report or not, value: true or false
          logger:
            UDM:
              debugLevel: info
              ReportCaller: false
            OpenApi:
              debugLevel: info
              ReportCaller: false
            PathUtil:
              debugLevel: info
              ReportCaller: false

          EOM

          #echo "initialize UDM"
          #go build -o bin/udm -x src/udm/udm.go

          #echo "run UDM"
          #sudo ./bin/udm
    CP1:
      type: tosca.nodes.nfv.CP.Tacker
      properties:
        ip_address: 192.168.2.106
        management: true
      requirements:
      - virtualLink:
          node: VL1
      - virtualBinding:
          node: VDU1
    VL1:
      type: tosca.nodes.nfv.VL
      properties:
        network_name: 5GC
        vendor: Tacker
    FIP1:
      type: tosca.nodes.network.FloatingIP
      properties:
        floating_network: public
        floating_ip_address: 172.24.4.106
      requirements:
      - link:
          node: CP1
